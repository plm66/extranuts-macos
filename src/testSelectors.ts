import { updateSelectorName, getAllSelectors } from './services/selectors'

// Test du syst√®me de s√©lecteurs
export async function testSelectors() {
  console.log('üß™ Test des s√©lecteurs - D√âBUT')
  
  try {
    // 1. R√©cup√©rer tous les s√©lecteurs
    console.log('\n1Ô∏è‚É£ R√©cup√©ration de tous les s√©lecteurs...')
    const allSelectors = await getAllSelectors()
    console.log(`   ‚úÖ ${allSelectors.length} s√©lecteurs r√©cup√©r√©s`)
    
    // 2. Tester la mise √† jour d'un nom
    console.log('\n2Ô∏è‚É£ Test de mise √† jour du nom du s√©lecteur 1...')
    await updateSelectorName(1, 'Test Selector 1')
    console.log('   ‚úÖ Nom mis √† jour avec succ√®s')
    
    // 3. V√©rifier la mise √† jour
    console.log('\n3Ô∏è‚É£ V√©rification de la mise √† jour...')
    const updatedSelectors = await getAllSelectors()
    const selector1 = updatedSelectors.find(s => s.id === 1)
    if (selector1) {
      console.log(`   ‚úÖ S√©lecteur 1 trouv√© avec nom: "${selector1.name}"`)
    } else {
      console.log('   ‚ùå S√©lecteur 1 non trouv√©')
    }
    
    // 4. Tester plusieurs mises √† jour
    console.log('\n4Ô∏è‚É£ Test de mises √† jour multiples...')
    await updateSelectorName(2, 'Test Selector 2')
    await updateSelectorName(3, 'Test Selector 3')
    console.log('   ‚úÖ Mises √† jour multiples r√©ussies')
    
    console.log('\nüß™ Test des s√©lecteurs - TERMIN√â AVEC SUCC√àS')
  } catch (error) {
    console.error('\n‚ùå ERREUR pendant les tests:', error)
  }
}

// Exporter pour utilisation dans la console
(window as any).testSelectors = testSelectors